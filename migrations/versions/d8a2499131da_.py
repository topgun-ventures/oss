"""empty message

Revision ID: d8a2499131da
Revises: 
Create Date: 2020-05-24 07:37:37.829790

"""
import os

import pandas as pd
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d8a2499131da"
down_revision = None
branch_labels = None
depends_on = None

CSV_DIR = os.path.join(os.getcwd(), "./migrations/csvs")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    exchanges = op.create_table(
        "exchanges",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=40), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    pairs = op.create_table(
        "pairs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ask_orderbooks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("pair_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.ForeignKeyConstraint(["pair_id"], ["pairs.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "balances",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("symbol", sa.String(length=10), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bid_orderbooks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("pair_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.ForeignKeyConstraint(["pair_id"], ["pairs.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cancelled_orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("order_exchange_id", sa.BigInteger(), nullable=False),
        sa.Column("amount_filled", sa.Float(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "checks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("active_orders", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("pair_id", sa.Integer(), nullable=True),
        sa.Column("order_exchange_id", sa.BigInteger(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.ForeignKeyConstraint(["pair_id"], ["pairs.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reference_prices",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=True),
        sa.Column("pair_id", sa.Integer(), nullable=True),
        sa.Column("av_price", sa.Float(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["exchange_id"], ["exchanges.id"],),
        sa.ForeignKeyConstraint(["pair_id"], ["pairs.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###

    for (table, name) in [(pairs, "pairs"), (exchanges, "exchanges")]:
        df = pd.read_csv(os.path.join(CSV_DIR, f"{name}.csv"))
        op.bulk_insert(table, df.to_dict("records"))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("reference_prices")
    op.drop_table("orders")
    op.drop_table("checks")
    op.drop_table("cancelled_orders")
    op.drop_table("bid_orderbooks")
    op.drop_table("balances")
    op.drop_table("ask_orderbooks")
    op.drop_table("pairs")
    op.drop_table("exchanges")
    # ### end Alembic commands ###
